# Seattle에 근무하는 직원들의 성명, 급여, 입사일자, 부서명을 출력.
# employees, departments 테이블을 조인해야 한다.
select concat(e.last_name, ' ', e.first_name), e.salary, e.hire_date, d.department_name, l.city
from employees e
    join departments d on e.department_id = d.department_id
    join locations l on d.location_id = l.location_id
where l.city = 'Seattle';

# Self join / 사번, 성명, 급여, 입사일자, 관리자사번, 관리자성명을 출력
select e.employee_id, e.last_name, e.salary, e.hire_date, m.employee_id, m.last_name
from employees e
     join employees m on e.manager_id = m.employee_id;
     
# Aggregate Function 집계함수
select min(salary), max(salary), sum(salary), avg(salary)
from employees;

select e.department_id, avg(salary), d.department_name
from employees e
	  join departments d
    on e.department_id = d.department_id
group by e.department_id, d.department_name;

select e.department_id, avg(salary)
from employees e
group by e.department_id
having avg(salary) >= 10000;

# SUBQUERY
# Neena가 근무하는 부서의 부서원 정보를 출력
# Neena는 어느부서 부서번호 출력
select department_id
from employees
where first_name = 'Neena';

select *
from employees
where department_id = 90;

# 위 커리를 하나로 만드는게 SUBQUERY
select *
from employees
where department_id = (select department_id
						            from employees
						            where first_name = 'Neena');
                
# Multi-Row
# Steven이 근무하는 부서원
# SubQuery 결과가 둘 이상의 Row이면, Multi-Row에 대한 연산을 사용해야 한다. (ANY, ALL, IN, EXIST 등)
select *
from employees
where department_id in (select department_id
						            from employees
						            where first_name = 'Steven');

# multi-column
# 부서 별로 최고급여를 받는 사원을 조회
# SUBQUERY 속 multi-colum 사용 (밑에선 department_id 추가)
select department_id, max(salary)
from employees
group by department_id; 

select department_id, last_name, salary
from employees
where (department_id, salary) in (select department_id, max(salary)
									                from employees
									                group by department_id)
order by department_id;

# Correlated Query (상호연관)
# 자신의 부서평균 급여보다 많은 급여를 받는 직원을 조회
select last_name, salary, department_id
from employees e
where salary > (select avg(salary)
				        from employees
				        where department_id = e.department_id);

#  자신의 부서평균 급여보다 많은 급여를 받는 직원을 조회 (from)
select e.last_name, e.salary, e.department_id
from employees e
	join (select department_id, avg(salary) avg_salary
			  from employees
			  group by department_id) das
    on e.department_id = das.department_id
where e.salary > das.avg_salary;

# 과제7 sub-query
# 다음쿼리를 서브쿼리만으로 수정합니다.
# Seattle에 근무하는 직원들의 성명, 급여, 입사일자를 출력하시오.
# select concat(e.last_name, ' ', e.first_name) 성명, e.salary 급여, e.hire_date 입사일자
# from employees e
#     join departments d on e.department_id = d.department_id
#     join locations l on d.location_id = l.location_id
# where l.city = 'Seattle';

select last_name 성명, salary 급여, hire_date 입사일자
from employees
where department_id in (select department_id
						from departments
						where location_id = (select location_id
											from locations
											where city = 'Seattle')); 		
